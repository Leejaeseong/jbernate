<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration file for LogBack (slf4J implementation)
See here for more details: http://gordondickens.com/wordpress/2013/03/27/sawing-through-the-java-loggers/ -->
<configuration scan="true" scanPeriod="30 seconds" debug="true">
	<!--
		Level : trace >	debug > info > warn > error 
	 -->

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <!-- To enable JMX Management -->
    <jmxConfigurator/>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{HH:mm} %-5level %logger{36} - %msg%n</Pattern>
        </layout>
    </appender>
    
    <!--  
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
             <pattern>▶ %-5level %d{HH:mm:ss.SSS} [%thread] %logger{0} - %msg%n</pattern>
        </encoder>
    </appender>
    -->

	<!--<logger name="org.hibernate" level="debug"/> -->
   <!-- Uncomment and add your logger here:
    <logger name="org.springframework.samples.service.service" level="debug"/> -->
         
    <root level="debug">
        <appender-ref ref="STDOUT"/>
    </root>
    
    <!--
    Hibernate 로그 카테고리들
	
    +===========================+=======================================================================================+  
	|         카테고리			|									기능												|	
	+===========================+=======================================================================================+
	| org.hibernate.SQL	SQL DML | 문장들이 실행될 때 그것들 모두를 로그 시킨다											|
	+===========================+=======================================================================================+
	| org.hibernate.type		| 모든 JDBC 파라미터들을 로그시킨다														|
	+===========================+=======================================================================================+
	| org.hibernate.tool.hbm2ddl| SQL DDL 문장들이 실행될 때 그것들 모두를 로그 시킨다									|
	+===========================+=======================================================================================+
	| org.hibernate.pretty	 	|flush 시점에서 세션과 연관된 모든 엔티티들(최대 20개의 엔티티들)의 상태를 로그 시킨다	|
	+===========================+=======================================================================================+
	| org.hibernate.cache	 	|모든 second-level 캐시 액티비티를 로그시킨다											|
	+===========================+=======================================================================================+
	| org.hibernate.transaction	| 트랜잭션 관련 액티비티를 로그 시킨다													|
	+===========================+=======================================================================================+
	| org.hibernate.jdbc		| 모든 JDBC 리소스 취득을 로그 시킨다													|
	+===========================+=======================================================================================+
	| org.hibernate.hql.ast.AST	| 질의 파싱 동안에 HQL AST와 SQL AST를 로그시킨다										|
	+===========================+=======================================================================================+
	| org.hibernate.secure		| 모든 JAAS 허가 요청들을 로그시킨다													|
	+===========================+=======================================================================================+
	| org.hibernate	 			| 모든 것을 로그시킨다(많은 정보이지만, 문제해결에 매우 유용하다)						|
	+===========================+=======================================================================================+
    -->
</configuration>